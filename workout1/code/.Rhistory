```{r eval=FALSE}
write.csv(
x = mtcars[,c('mpg','disp','hp')],
file = '/Users/yuxiner/stat133-lab05/exports/dataset.csv' ,
)
head(mtcars)
```
```{r eval=FALSE}
write.csv(
x = mtcars[,c('mpg','disp','hp')],
file = '/Users/yuxiner/stat133-lab05/exports.csv' ,
)
sink(file = '/c/Users/hp/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
```
```{r }
head(mtcars)
```{r }
sink(file = '/Users/yuxiner/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
```
```{r }
head(mtcars)
sink(file = '/Users/yuxiner/stat133-lab05/exports/mtcars-structure.txt')
```{bash}
cd exports
mkdir mtcars-structure
```
```{r }
sink(file = '/Users/yuxiner/stat133-lab05/exports/mtcars-structure.txt')
```{bash}
cd stat133-lab05
mkdir exports
```
```{r }
write.csv(
x = mtcars[,c('mpg','disp','hp')],
file = '/Users/yuxiner/stat133-lab05/exports.csv' ,
)
```{bash}
cd exports
mkdir mtcars-structure
```
```{r }
sink(file = '/Users/yuxiner/stat133-lab05/exports/mtcars-structure.txt')
str(mtcars)
```
x <- c (2,4,6,8)
name (x) <- letters[1:4]
x <- c (2,4,6,8)
name(x) <- letters[1:4]
x <- c (2,4,6,8)
names (x) <- letters[1:4]
x(TRUE)
x <- c (2,4,6,8)
names (x) <- letters[1:4]
x
x [TRUE]
x [as.logical(c(0,1,pi,-10))]
x [c(2,3,4)]
x [as.logical(c(0,1,pi,-10))]
x [as.logical(c(0,1,pi,-10))]
install.packages(c("stringr", "RColorBrewer","XML""))
install.packages(c("stringr", "RColorBrewer","XML"))
install.packages(c("stringr", "RColorBrewer","XML"))
x<-2
2x<-2*x
sqrt4 <- sqrt(4)
sqrt4
# example 4
a number <- 16
# example 5
"one number" <- 16
`one number`
one number
lst <- list(
c(1,2,3)
matrix(1:9, nrow=3, ncol=3)
lst <- list(
c(1,2,3),
matrix(1:9, nrow=3, ncol=3)
list(1:2,c(TRUE,FALSE),c('a','b'))
lst <- list(
c(1,2,3),
matrix(1:9, nrow=3, ncol=3),
list(1:2,c(TRUE,FALSE),c('a','b'))
)
lst[1]
lst[[1]]
lst[1]
lst[[3]]
lst[3]
object.size(lst)
attrubute(lst)
attributes(lst)
attributes(lst)
attributes(lst)
df <- data.frame(
name = c('a','b','c')
height= c(1.4,1.5,1.8)
df <- data.frame(
name = c('a','b','c'),
height= c(1.4,1.5,1.8)
)
attributes(df)
object.size(df)
# download RData file into your working directory
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = '~/Desktop/nba2018-salary-points.RData')
# load data in your R session
load('nba2018-salary-points.RData')
# download RData file into your working directory
rdata <- "https://github.com/ucb-stat133/stat133-labs/raw/master/data/nba2018-salary-points.RData"
download.file(url = rdata, destfile = '~/Desktop/nba2018-salary-points.RData')
# load data in your R session
load('nba2018-salary-points.RData')
# load data in your R session
load('~/Desktop/nba2018-salary-points.RData')
# list the available objects with ls()
ls()
which(team == 'GSW' & team == 'LAL')
which(position == 'PG' & position == 'SG' & team == 'LAL')
# use your own user name
git config --global user.name "yuxiner"
x <- c(1,2,3,4,5)
x[-2][3]
x <- c(1,2,3,4,5)
x[-2][3]
x[3]
x[-2]
list(1,2,3,4,5)
y<-(x==1.1)
z<-y+0
typeof(z)
y<-(x==1.1)
z<-y+1
typeof(z)
y<-(x==1.1)
z<-y+1.1
typeof(z)
y<-(x==1.1)
z<-1
typeof(z)
y<-(x==1.1)
z<-1
typeof(z)
y<-(x==1.1)
z<-1
typeof(2)
y<-(x==1.1)
z<-1
typeof(2.5)
y<-(x==1.1)
z<-1L
typeof(z)
yummy<-c(TRUE)
yummy[2]<-FALSE
peanut<-yummy + 1
peanut
yummut<-yummy[peanut]
yummut<-yummy[peanut]
yummut
a<-c('d','u','m','b','l','e','d','o','r','e')
a[a != 'u' | a == 'o']
y<-(x==1.1)
z<-1L
typeof(z)
class(z)
l<-list(1,2,3,4,5)
typeof(l)
class(l)
l<-list(1,2,3,4,5)
typeof(l)
class(l)
attributes(l)
!0
!0
!2
!0
!2
1 + !TRUE
!0
!2
1 + !TRUE
! TRUE +1
!0
!2
1 + !TRUE
! TRUE +1
c(1,2)^2
!0
!2
1 + !TRUE
! TRUE +1
c(1,2)^2
typeof('a',1)
1:5
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "workout01/data/andre-iguodala.csv")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "workout01/data/andre-iguodala.csv")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/draymond-green.csv", "../data/draymond-green.csv")
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg","../images/nba-court.jpg")
install.packages(c( "jpeg" ,"grid"))
library("readJPEG")
library("readJPEG")
library("rasterGrob")
# court image (to be used as background of plot)
court_file <- "../images/nba-court.jpg"
# create raste object
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
library(readJPEG)
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg","../images/nba-court.jpg")
install.packages(c( "jpeg" ,"grid"))
library(readJPEG)
library(jpeg)
library(grid)
library(ggplot2)
install.packages(c( "jpeg" ,"grid","ggplot2"))
install.packages(c("jpeg", "grid", "ggplot2"))
library(jpeg)
library(grid)
library(ggplot2)
# court image (to be used as background of plot)
court_file <- "../images/nba-court.jpg"
# create raste object
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg","../images/nba-court.jpg")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg" , "../images/nba-court.jpg")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg" , "../images/nba-court.jpg")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
download.file("https://github.com/ucb-stat133/stat133-hws/blob/master/images/nba-court.jpg" , "../images/nba-court.jpg")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd('make-short-data-script.R')
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
setwd('/Users/yuxiner/Ducuments/stat 133/workout01/code')
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output(s): what are the outputs created when running the script?
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
debugSource('~/Documents/stat 133/workout01/code/make-short-data-script.R')
#title: short title
#description: a short description of what the script is about
#input(s): what are the inputs required by the script?
#output
getwd()
install.packages("dplyr")
library(dplyr)
getwd()
shots <- read.csv(file = "../data/shots-data.csv",stringsAsFactors = FALSE)
shots
PT2_shots <- shots %>%
filter(shot_type == "2PT Field Goal") %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
PT2_shots
PT3_shots <- shots %>%
filter(shot_type == "3PT Field Goal") %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
PT3_shots
effective_shots <- shots %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
effective_shots
install.packages("dplyr")
shots <- read.csv(file = "../data/shots-data.csv",stringsAsFactors = FALSE)
PT2_shots <- shots %>%
filter(shot_type == "2PT Field Goal") %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
PT2_shots
PT3_shots <- shots %>%
filter(shot_type == "3PT Field Goal") %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
PT3_shots
effective_shots <- shots %>%
group_by(name) %>%
summarize(total = n(), made = length(shot_type[shot_made_flag =="shot_yes"])) %>%
mutate(perc_made = made / total) %>%
arrange(desc(perc_made))
effective_shots
thompsont_shot_chart <- ggplot(data = thompsont) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
install.packages(c( "jpeg" ,"grid","ggplot2"))
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/images/nba-court.jpg" , "../images/nba-court.jpg")
setwd('/Users/yuxiner/Documents/stat 133/workout01/code')
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/images/nba-court.jpg" , "../images/nba-court.jpg")
library(jpeg)
library(grid)
library(ggplot2)
# court image (to be used as background of plot)
court_file <- "../images/nba-court.jpg"
# create raste object
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
thompsont_scatterplot <- ggplot(data = thompsont ) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
thompsont_shot_chart <- ggplot(data = thompsont) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
col_types = c("character", "character", "integer","integer","integer","integer","character","factor","factor","integer","character","integer","integer")
getwd()
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/andre-iguodala.csv", "../data/andre-iguodala.csv")
iguodala <- read.csv("../data/andre-iguodala.csv", header = TRUE,stringsAsFactors = FALSE,colClasses = col_types)
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/draymond-green.csv", "../data/draymond-green.csv")
green <- read.csv("../data/draymond-green.csv", header = TRUE,stringsAsFactors = FALSE,colClasses = col_types)
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/kevin-durant.csv", "../data/kevin-durant.csv")
durant <- read.csv("../data/kevin-durant.csv", header = TRUE,stringsAsFactors = FALSE,colClasses = col_types)
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/klay-thompson.csv", "../data/klay-thompson.csv")
thompsont <- read.csv("../data/klay-thompson.csv", header = TRUE,stringsAsFactors = FALSE,colClasses = col_types)
download.file("https://raw.githubusercontent.com/ucb-stat133/stat133-hws/master/data/stephen-curry.csv", "../data/stephen-curry.csv")
curry <- read.csv("../data/stephen-curry.csv", header = TRUE,stringsAsFactors = FALSE,colClasses = col_types)
iguodala$name = 'Andre Iguodala'
green$name = 'Graymond Green'
durant$name = 'Kevin Durant'
thompsont$name = 'Klay Thompson'
curry$name = 'Stephen Curry'
iguodala[iguodala$shot_made_flag == 'n',]$shot_made_flag = "shot_no"
iguodala[iguodala$shot_made_flag == 'y',]$shot_made_flag = "shot_yes"
green[green$shot_made_flag == 'n',]$shot_made_flag = "shot_no"
green[green$shot_made_flag == 'y',]$shot_made_flag = "shot_yes"
durant[durant$shot_made_flag == 'n',]$shot_made_flag = "shot_no"
durant[durant$shot_made_flag == 'y',]$shot_made_flag = "shot_yes"
thompsont[thompsont$shot_made_flag == 'n',]$shot_made_flag = "shot_no"
thompsont[thompsont$shot_made_flag == 'y',]$shot_made_flag = "shot_yes"
curry[curry$shot_made_flag == 'n',]$shot_made_flag = "shot_no"
curry[curry$shot_made_flag == 'y',]$shot_made_flag = "shot_yes"
iguodala$minute = (iguodala$period *12) - iguodala$minutes_remaining
green$minute = (green$period *12) - green$minutes_remaining
durant$minute = (durant$period *12) - durant$minutes_remaining
thompsont$minute = (thompsont$period *12 )- thompsont$minutes_remaining
curry$minute = (curry$period *12 )- curry$minutes_remaining
sink(file="../output/andre-iguodala-summary.txt")
summary(iguodala)
sink()
sink(file="../output/draymond-green-summary.txt")
summary(green)
sink()
sink(file="../output/kevin-durant-summary.txt")
summary(durant)
sink()
sink(file="../output/klay-thompsona-summary.txt")
summary(thompsont)
sink()
sink(file="../output/stephen-curry-summary.txt")
summary(curry)
sink()
getwd()
a <- rbind(iguodala,green,durant,thompsont,curry)
write.csv(
x = a,
file = '../data/shots-data.csv'
)
sink(file = "../output/shots-data-summary.txt")
summary(a)
sink()
# create raste object
court_image <- rasterGrob(
readJPEG(court_file),
width = unit(1, "npc"),
height = unit(1, "npc"))
thompsont_scatterplot <- ggplot(data = thompsont ) +
geom_point(aes(x = x, y = y, color = shot_made_flag))
thompsont_shot_chart <- ggplot(data = thompsont) +
annotation_custom(court_image, -250, 250, -50, 420) +
geom_point(aes(x = x, y = y, color = shot_made_flag)) +
ylim(-50, 420) +
ggtitle('Shot Chart: Klay Thompson (2016 season)') +
theme_minimal()
pdf(file = "../images/klay-thompson-shot-chart.pdf", width=6.5, height=5)
thompsont_shot_chart
dev.off()
install.packages("dplyr")
install.packages("dplyr")
install.packages("dplyr")
